import { RequestOptions } from 'https';
import FormData from 'form-data';
import { ClientRequest } from 'http';
export interface PackageDeployOptions {
    packagePath: string;
    appName: string;
    importServiceUrl: string;
    secret: string;
    debugSecurity?: boolean;
    acceptCertificate?: string;
    proxy?: string;
}
/**
 * @param {ClientRequest} req
 * @param {PackageDeployOptions} options
 */
export declare function applyCertPinning(req: ClientRequest, options: PackageDeployOptions): void;
/**
 * @param {string} fp
 */
export declare function normalizeFingerprint(fp: string): string;
/**
 * @param {string} fp1
 * @param {string} fp2
 */
export declare function doFingerprintsMatch(fp1: string, fp2: string): boolean;
/**
 * @param {object} params
 * @param {string[]} params.warnings
 * @param {string[]} params.errors
 * @param {Function} params.resolve
 * @param {Function} params.reject
 */
export declare function finishWatchJobStatusTask({ warnings, errors, resolve, reject, }: {
    warnings: string[];
    errors: string[];
    resolve: (value?: unknown) => void;
    reject: () => void;
}): void;
/**
 * @param {object} params
 * @param {string} params.message
 * @param {string} params.entryLevel
 * @param {string[]} params.warnings
 * @param {string[]} params.errors
 */
export declare function logJobStatus({ message, entryLevel, warnings, errors, }: {
    message: string;
    entryLevel: string;
    warnings: string[];
    errors: string[];
}): void;
/**
 * @param {PackageDeployOptions} options
 * @param {string} taskName
 */
export declare function watchJobStatus(options: PackageDeployOptions, taskName: string): Promise<void>;
/**
 * @param {PackageDeployOptions} options
 */
export declare function packageDeploy(options: PackageDeployOptions): Promise<void>;
/**
 * Creates valid proxy object
 * @param {RequestOptions} reqOptions
 * @param {string} proxy proxy url
 * @param {string} targetUrl target url
 */
export declare function setProxy(reqOptions: RequestOptions, proxy: string, targetUrl: string): void;
/**
 * Attach form data handlers to handle errors and close events
 * @param {ClientRequest} req request object
 * @param {FormData} formData FormData object
 */
export declare function attachFormDataHandlers(req: ClientRequest, formData: FormData): void;
