/**
 * Settings for @var getItems function
 */
export type GetItemsSettings<Item> = {
    /**
     * items path
     */
    path: string;
    /**
     * Resolve item in required data format
     */
    resolveItem: (path: string, name: string) => Item;
    /**
     * Will be called when new file is found
     */
    cb?: (name: string) => void;
    /**
     * Matches specific files format
     */
    fileFormat?: RegExp;
    /**
     * Wether to search recursively
     */
    recursive?: boolean;
};
/**
 * Using @var path find all files and generate output using @var resolveItem function for each file
 * Can be used to generate list of components, templates, etc.
 * @param {GetItemsSettings} settings
 * @returns {Item[]} list of items
 */
export declare function getItems<Item>(settings: GetItemsSettings<Item>): Item[];
/**
 * Run watch mode, watching on @var paths
 * @param {string[]} paths paths to watch by chokidar
 * @param {Function<void>} cb callback to run on file change
 */
export declare function watchItems(paths: string[], cb: () => void): void;
