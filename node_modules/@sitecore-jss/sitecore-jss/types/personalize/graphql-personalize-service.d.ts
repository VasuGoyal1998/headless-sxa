import { GraphQLClient, GraphQLRequestClientFactory } from '../graphql-request-client';
import { CacheClient, CacheOptions } from '../cache-client';
export type GraphQLPersonalizeServiceConfig = CacheOptions & {
    /**
     * Timeout (ms) for the Personalize request. Default is 400.
     */
    timeout?: number;
    /**
     * Optional Sitecore Personalize scope identifier allowing you to isolate your personalization data between XM Cloud environments
     * @deprecated Will be removed in a future release.
     */
    scope?: string;
    /**
     * Override fetch method. Uses 'GraphQLRequestClient' default otherwise.
     */
    fetch?: typeof fetch;
    /**
     * A GraphQL Request Client Factory is a function that accepts configuration and returns an instance of a GraphQLRequestClient.
     * This factory function is used to create and configure GraphQL clients for making GraphQL API requests.
     */
    clientFactory: GraphQLRequestClientFactory;
};
/**
 * Object model of personlize info
 */
export type PersonalizeInfo = {
    /**
     * The page id
     */
    pageId: string;
    /**
     * The configured variant ids
     */
    variantIds: string[];
};
type PersonalizeQueryResult = {
    layout: {
        item: {
            id: string;
            version: string;
            personalization: {
                variantIds: string[];
            };
        };
    };
};
export declare class GraphQLPersonalizeService {
    protected config: GraphQLPersonalizeServiceConfig;
    private graphQLClient;
    private cache;
    /**
     * Fetch personalize data using the Sitecore GraphQL endpoint.
     * @param {GraphQLPersonalizeServiceConfig} config
     */
    constructor(config: GraphQLPersonalizeServiceConfig);
    protected get query(): string;
    /**
     * Get personalize information for a route
     * @param {string} itemPath page route
     * @param {string} language language
     * @param {string} siteName site name
     * @returns {Promise<PersonalizeInfo | undefined>} the personalize information or undefined (if itemPath / language not found)
     */
    getPersonalizeInfo(itemPath: string, language: string, siteName: string): Promise<PersonalizeInfo | undefined>;
    /**
     * Gets cache client implementation
     * Override this method if custom cache needs to be used
     * @returns CacheClient instance
     */
    protected getCacheClient(): CacheClient<PersonalizeQueryResult>;
    protected getCacheKey(itemPath: string, language: string, siteName: string): string;
    /**
     * Gets a GraphQL client that can make requests to the API. Uses graphql-request as the default
     * library for fetching graphql data (@see GraphQLRequestClient). Override this method if you
     * want to use something else.
     * @returns {GraphQLClient} implementation
     */
    protected getGraphQLClient(): GraphQLClient;
}
export {};
