import { ComponentRendering, ComponentFields, Field, GenericFieldValue, HtmlElementRendering } from './models';
/**
 * Safely extracts a field value from a rendering or fields object.
 * Null will be returned if the field is not defined.
 * @param {ComponentRendering | Fields} renderingOrFields the rendering or fields object to extract the field from
 * @param {string} fieldName the name of the field to extract
 * @returns {T | undefined} the field value or null if the field is not defined
 */
export declare function getFieldValue<T>(renderingOrFields: ComponentRendering | ComponentFields, fieldName: string): T | undefined;
export declare function getFieldValue<T>(renderingOrFields: ComponentRendering | ComponentFields, fieldName: string, defaultValue: T): T;
/**
 * Gets rendering definitions in a given child placeholder under a current rendering.
 * @param {ComponentRendering} rendering
 * @param {string} placeholderName
 * @returns {Array<ComponentRendering | HtmlElementRendering>} child placeholder
 */
export declare function getChildPlaceholder(rendering: ComponentRendering, placeholderName: string): Array<ComponentRendering | HtmlElementRendering>;
/**
 * Returns a regular expression pattern for a dynamic placeholder name.
 * @param {string} placeholder Placeholder name with a dynamic segment (e.g. 'main-{*}')
 * @returns Regular expression pattern for the dynamic segment
 */
export declare const getDynamicPlaceholderPattern: (placeholder: string) => RegExp;
/**
 * Checks if the placeholder name is dynamic.
 * @param {string} placeholder Placeholder name
 * @returns True if the placeholder name is dynamic
 */
export declare const isDynamicPlaceholder: (placeholder: string) => boolean;
/**
 * The default value for an empty Date field.
 * This value is defined as a default one by .NET
 */
export declare const EMPTY_DATE_FIELD_VALUE = "0001-01-01T00:00:00Z";
/**
 * Determines if the passed in field object's value is empty.
 * @param {GenericFieldValue | Partial<Field>} field the field object.
 * Partial<T> type is used here because _field.value_ could be required or optional for the different field types
 */
export declare function isFieldValueEmpty(field: GenericFieldValue | Partial<Field>): boolean;
